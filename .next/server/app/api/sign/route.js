(()=>{var e={};e.id=893,e.ids=[893],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3871:(e,t,r)=>{"use strict";r.d(t,{i:()=>o});let n=new Map;function o(e){let t=Date.now(),{key:r,capacity:o,refillPerSec:i}=e,s=1e3/Math.max(i,1),a=n.get(r)||{tokens:o,lastRefill:t};if(t-a.lastRefill>=s){let e=Math.floor((t-a.lastRefill)/s);a.tokens=Math.min(o,a.tokens+e),a.lastRefill=t}return a.tokens>0?(a.tokens-=1,n.set(r,a),{ok:!0}):(n.set(r,a),{ok:!1})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5041:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>A,routeModule:()=>S,serverHooks:()=>w,workAsyncStorage:()=>v,workUnitAsyncStorage:()=>k});var n={};r.r(n),r.d(n,{POST:()=>h,runtime:()=>m});var o=r(6559),i=r(8088),s=r(7719),a=r(2190),c=r(8504),l=r(3871),u=r(5740);let p=require("node:os"),f=require("node:fs"),d=require("node:path"),y=require("node:child_process"),m="nodejs";function g(e,t,r){return new Promise(n=>{let o=(0,y.spawn)(e,t,{cwd:r}),i=[],s=[];o.on("error",e=>{s.push(Buffer.from(String(e))),n({code:-1,stdout:Buffer.concat(i).toString("utf8"),stderr:Buffer.concat(s).toString("utf8")})}),o.stdout.on("data",e=>i.push(Buffer.from(e))),o.stderr.on("data",e=>s.push(Buffer.from(e))),o.on("close",e=>{n({code:e??-1,stdout:Buffer.concat(i).toString("utf8"),stderr:Buffer.concat(s).toString("utf8")})})})}async function h(e){let t=(0,c.a)("sign_"),r=e.headers.get("x-forwarded-for")||"unknown";if(!(0,l.i)({key:`sign:${r}`,capacity:20,refillPerSec:.33}).ok)return a.NextResponse.json({error:"Rate limit exceeded",reqId:t},{status:429});try{let r=await e.formData(),n=r.get("file"),o=r.get("manifest"),i=r.get("certPem"),s=r.get("privateKeyPem");if(!(n instanceof File)||"string"!=typeof o)return a.NextResponse.json({error:"Invalid form data",reqId:t},{status:400});let c="string"==typeof i&&"string"==typeof s,l=(0,f.mkdtempSync)((0,d.join)((0,p.tmpdir)(),"c2pa-")),y=n.name||"input.jpg",m=(0,d.extname)(y)||".jpg",h=(0,d.join)(l,`input${m}`),S=(0,d.join)(l,`signed${m}`),v=(0,d.join)(l,"manifest.json"),k=(0,d.join)(l,"cert.pem"),w=(0,d.join)(l,"private.key"),A=new Uint8Array(await n.arrayBuffer());if((0,f.writeFileSync)(h,A),c){let e=function(e){let t=e.replace(/\r\n/g,"\n").replace(/\r/g,"\n"),r=(t=t.trim()).match(/-----BEGIN CERTIFICATE-----[\s\S]*?-----END CERTIFICATE-----/g);return r&&0!==r.length?r[0].trim():t}(i),r=s.replace(/\r\n/g,"\n").replace(/\r/g,"\n");u.v.info("Writing user credentials",{reqId:t,certLength:e.length,keyLength:r.length,certPreview:e.slice(0,100),keyPreview:r.slice(0,100)}),(0,f.writeFileSync)(k,e,"utf8"),(0,f.writeFileSync)(w,r,"utf8");let n=(0,d.join)(l,"private_ec.key");try{let e=await g("openssl",["ec","-in",w,"-out",n],l);0===e.code&&(0,f.existsSync)(n)?(u.v.info("Converted PKCS#8 key to EC format",{reqId:t}),w=n):u.v.warn("Could not convert key to EC format, using PKCS#8",{reqId:t,stderr:e.stderr})}catch(e){u.v.warn("openssl conversion failed, using PKCS#8 key",{reqId:t,error:String(e)})}}try{let e=JSON.parse(o);if(u.v.info("Processing manifest",{reqId:t,useUserCredentials:c,hasAssertions:e&&"object"==typeof e&&Array.isArray(e.assertions),rawManifestKeys:e&&"object"==typeof e?Object.keys(e):null}),e&&"object"==typeof e&&Array.isArray(e.assertions)){u.v.info("Manifest has assertions",{reqId:t,hasTaUrl:!!e.ta_url,taUrl:e.ta_url}),c&&!e.ta_url&&(e.ta_url=process.env.TSA_URL||"https://api.c2patool.io/api/v1/timestamps/ecc",u.v.info("Added SSL.com TSA URL to manifest",{reqId:t,tsaUrl:e.ta_url})),e.assertions=e.assertions.map(e=>{if(!e||"object"!=typeof e)return e;let t=e.label,r=Object.prototype.hasOwnProperty.call(e,"data");if("c2pa.actions"===t){let n=[];if(r){let t=e.data;t&&"object"==typeof t&&Array.isArray(t.actions)?n=t.actions:Array.isArray(t)?n=t:t&&"object"==typeof t&&t.action&&(n=[t])}else"string"==typeof e.action?n=[{action:e.action}]:Array.isArray(e.actions)&&(n=e.actions);return{label:t,data:{actions:n}}}if(!r){let{label:r,...n}=e;return{label:t,data:Object.keys(n).length?n:{}}}return e}),c&&(e.private_key=w,e.sign_cert=k);let r=JSON.stringify(e,null,2);(0,f.writeFileSync)(v,r,"utf8"),u.v.info("Wrote manifest to file",{reqId:t,manifestPath:v,manifestPreview:r.slice(0,500)})}else{let e=JSON.parse(o);c&&(e.private_key=w,e.sign_cert=k,e.ta_url||(e.ta_url=process.env.TSA_URL||"https://api.c2patool.io/api/v1/timestamps/ecc",u.v.info("Added SSL.com TSA URL to manifest (simple path)",{reqId:t,tsaUrl:e.ta_url}))),(0,f.writeFileSync)(v,JSON.stringify(e),"utf8")}}catch{try{let e=JSON.parse(o);c&&(e.private_key=w,e.sign_cert=k,e.ta_url||(e.ta_url=process.env.TSA_URL||"https://api.c2patool.io/api/v1/timestamps/ecc",u.v.info("Added SSL.com TSA URL to manifest (fallback path)",{reqId:t,tsaUrl:e.ta_url}))),(0,f.writeFileSync)(v,JSON.stringify(e),"utf8")}catch{(0,f.writeFileSync)(v,o,"utf8")}}let T=process.env.C2PATOOL_PATH||"c2patool";if(!(0,d.isAbsolute)(T)){let e=(0,d.join)(process.cwd(),T);(0,f.existsSync)(e)&&(T=e)}let x=[h,"-m",v,"-o",S],_=process.env.TRUST_ANCHORS_PATH;_&&(0,f.existsSync)(_)&&x.push("-f","trust","--trust_anchors",_),u.v.info("Invoking c2patool",{reqId:t,command:T,args:x,cwd:l,useUserCredentials:c});let j=await g(T,x,l);if(u.v.info("c2patool execution completed",{reqId:t,exitCode:j.code,outputExists:(0,f.existsSync)(S),stdout:j.stdout.slice(0,500),stderr:j.stderr.slice(0,500)}),0!==j.code||!(0,f.existsSync)(S)){let e;u.v.error("c2patool sign failed",{reqId:t,code:j.code,stderr:j.stderr});try{(0,f.rmSync)(l,{recursive:!0,force:!0})}catch{}return -1===j.code||j.stderr?.includes("ENOENT")||j.stderr?.includes("not found")?e=`c2patool binary not found or not executable. To use demo mode:
1. Install c2patool: https://github.com/contentauth/c2patool
2. Set C2PATOOL_PATH environment variable to the binary path
3. Ensure it's executable: chmod +x /path/to/c2patool

Alternatively, uncheck "Quick demo mode" to sign with your own certificate and keys (main workflow).

Current C2PATOOL_PATH: ${T}`:(j.stderr?.includes("time stamp")||j.stderr?.includes("timestamp"))&&(e=c?`SSL.com TSA (https://api.c2patool.io/v1/timestamp) is currently unreachable.

Possible solutions:
1. Contact SSL.com team to investigate the TSA connectivity
2. Verify the TSA endpoint is accessible from your network
3. For testing purposes, you can temporarily modify the manifest's ta_url to use a different RFC 3161 compliant TSA

The certificate issuance API is working correctly - only the timestamp service has connectivity issues.`:`c2patool failed to generate timestamp. This is likely due to network issues or TSA endpoint configuration.

Quick fix: Uncheck "Quick demo mode" to sign with your own certificate and keys instead (the main workflow for this tool).

If you need demo mode, ensure c2patool can reach the TSA endpoints listed in the footer.`),a.NextResponse.json({error:"Signing failed",reqId:t,detail:j.stderr?.slice(0,2e3),hint:e},{status:500})}let O=(0,f.readFileSync)(S);u.v.info("Read signed file",{reqId:t,fileSize:O.length});try{(0,f.rmSync)(l,{recursive:!0,force:!0})}catch{}let P=n.type||"application/octet-stream",R=P.replace(/[^\x00-\x7F]/g,""),b=new Uint8Array(O),C=(n.name||"asset").replace(/[^\x00-\x7F]/g,"_");return u.v.info("Returning signed file",{reqId:t,arrayLength:b.length,contentType:R,rawContentType:P,filename:C,rawFilename:n.name}),new Response(b,{status:200,headers:{"Content-Type":R,"Content-Disposition":`attachment; filename="signed-${C}"`,"Content-Length":b.length.toString()}})}catch(r){let e=r instanceof Error?r.message:String(r);return u.v.error("sign route error",{reqId:t,error:e}),a.NextResponse.json({error:"Server error",reqId:t},{status:500})}}let S=new o.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/sign/route",pathname:"/api/sign",filename:"route",bundlePath:"app/api/sign/route"},resolvedPagePath:"/Users/jeremiah/Desktop/c2pa tool/app/api/sign/route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:v,workUnitAsyncStorage:k,serverHooks:w}=S;function A(){return(0,s.patchFetch)({workAsyncStorage:v,workUnitAsyncStorage:k})}},5740:(e,t,r)=>{"use strict";function n(e){if(e)return e.length<=8?"***":e.slice(0,4)+"***"+e.slice(-2)}function o(e,t,r={}){let i={level:e,msg:t,...r,t:new Date().toISOString()};"token"in i&&"string"==typeof i.token&&(i.token=n(i.token)),"AUTH_TOKEN"in i&&"string"==typeof i.AUTH_TOKEN&&(i.AUTH_TOKEN=n(i.AUTH_TOKEN));try{console.log(JSON.stringify(i))}catch{console.log(e.toUpperCase(),t,r)}}r.d(t,{v:()=>i});let i={debug:(e,t)=>o("debug",e,t),info:(e,t)=>o("info",e,t),warn:(e,t)=>o("warn",e,t),error:(e,t)=>o("error",e,t)}},6487:()=>{},8335:()=>{},8504:(e,t,r)=>{"use strict";function n(e="req_"){return e+Math.random().toString(36).slice(2)}r.d(t,{a:()=>n})},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[447,580],()=>r(5041));module.exports=n})();